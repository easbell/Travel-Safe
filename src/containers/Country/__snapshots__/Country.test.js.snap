// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Country should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Country
    name="France"
    rating={2.4}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        false,
        <button
          className="btn add"
          onClick={[Function]}
        >
          +
        </button>,
        <Link
          style={
            Object {
              "textDecoration": "none",
            }
          }
          to="/details/undefined"
        >
          <h2>
            France
          </h2>
        </Link>,
        <button
          className="btn L"
        >
          L
        </button>,
      ],
      "className": "country",
    },
    "ref": null,
    "rendered": Array [
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "+",
          "className": "btn add",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "+",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <h2>
            France
          </h2>,
          "style": Object {
            "textDecoration": "none",
          },
          "to": "/details/undefined",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "France",
          },
          "ref": null,
          "rendered": "France",
          "type": "h2",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "L",
          "className": "btn L",
        },
        "ref": null,
        "rendered": "L",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          false,
          <button
            className="btn add"
            onClick={[Function]}
          >
            +
          </button>,
          <Link
            style={
              Object {
                "textDecoration": "none",
              }
            }
            to="/details/undefined"
          >
            <h2>
              France
            </h2>
          </Link>,
          <button
            className="btn L"
          >
            L
          </button>,
        ],
        "className": "country",
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "+",
            "className": "btn add",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "+",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <h2>
              France
            </h2>,
            "style": Object {
              "textDecoration": "none",
            },
            "to": "/details/undefined",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "France",
            },
            "ref": null,
            "rendered": "France",
            "type": "h2",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "L",
            "className": "btn L",
          },
          "ref": null,
          "rendered": "L",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
